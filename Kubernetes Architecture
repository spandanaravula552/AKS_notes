

üß† #Day02 of Kubernetes
üéØ Topic: Kubernetes Architecture

Kubernetes is divided into two main parts:

1Ô∏è‚É£ Control Plane (or Master Node)
2Ô∏è‚É£ Data Plane (or Worker Node)

 üîπ Control Plane Components:

The Control Plane  manages the overall state of the Kubernetes cluster. It has the following components:

1. API Server:
   The core and heart of Kubernetes. It acts as the frontend of the control plane and exposes the Kubernetes cluster to external users.
   ‚û°Ô∏è All requests to the cluster (from users, kubectl, or controllers) first go through the API server.

2. Scheduler:
   Responsible for distributing containers across available nodes.
   ‚û°Ô∏è It watches for newly created pods that are not yet assigned to a node and chooses the  node to run them on.

3. etcd:
   A key-value store used to store all configuration and state data of the Kubernetes cluster.

4. Controller Manager:
   Monitors and maintains the desired state of cluster resources.
   ‚û°Ô∏è It includes several controllers such as the Node Controller and Replication Controller, which handle node health and pod replication.

5. Cloud Controller Manager:
   Responsible for managing cloud-specific integrations (e.g., with AWS, Azure, GCP).
   ‚û°Ô∏è This component only exists in cloud environments and is not present in on-prem setups.

### üîπ Data Plane Components:

The Data Plane (or Worker Nodes) is responsible for actually running the applications.

1. Kubelet:
   An agent that runs on every node in the cluster.
   ‚û°Ô∏è It ensures that containers are running inside pods as expected on each node.

2. Kube-Proxy:
   Handles Kubernetes networking.
   ‚û°Ô∏è It assigns IPs to new pods and manages network traffic routing within the cluster ‚Äî especially as pods scale based on load.

In one word I can say, Control plane is the one which controls the actions, Data plane is the one which executing those actions.










Installation of kubectl: go to this link, click on install kubectl on windows, copy the curl command, and run the command in cmd as administrator, then it will download, check the version using "kubectl version". link: https://kubernetes.io/docs/tasks/tools/install-kubectl-windows/



Ubuntu UN: k8slab, Ubuntu pwd: labkubs@123

Deploying my first application in kubernetes: 
Note: in Docker,we deploy the containers but in k8s we deploy the pod, which contains one or more containers.
Minikube is a command - line tool, which allows us to create the k8s cluster, kubectl is a command line tool which allows to interact with the cluster.
To create the k8s cluster using minikube, run "minikube start" which creates single node cluster.
To see the node status, execute - kubectl get nodes 
In k8s, we deploy any resourse with the YAML files, whether it is pod, deployments, replica set.
when the pod gets created, it assigned with the k8s cluster IP address, so that we can access the application inside a container using the same IP address.

behind scenes cluster IP address is generated by kube-proxy component.
To create the pod:  
